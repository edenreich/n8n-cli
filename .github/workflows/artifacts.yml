---
name: Release Artifacts

on:
  release:
    types:
      - published
      - created
  workflow_dispatch:
    inputs:
      version:
        description: "Release version (e.g., v0.1.0)"
        required: true
        type: string

permissions:
  contents: write

jobs:
  build:
    name: Build for ${{ matrix.os }}_${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux builds
          - os: ubuntu-24.04
            arch: amd64
            go-arch: amd64
            goos: linux
          - os: ubuntu-24.04-arm
            arch: arm64
            go-arch: arm64
            goos: linux
          # macOS builds
          - os: macos-latest
            arch: amd64
            go-arch: amd64
            goos: darwin
          - os: macos-latest
            arch: arm64
            go-arch: arm64
            goos: darwin

    steps:
      - name: Check out code
        uses: actions/checkout@v4.2.2

      - name: Set up Go
        uses: actions/setup-go@v5.5.0
        with:
          go-version: "1.24"

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.go-arch }}
          CGO_ENABLED: 0
        run: |
          APP_NAME=n8n-cli
          if [ -n "${{ github.event.inputs.version }}" ]; then
            VERSION=${{ github.event.inputs.version }}
            VERSION=${VERSION#v}
          else
            VERSION=${GITHUB_REF#refs/tags/}
            VERSION=${VERSION#v}
          fi
          echo "Building ${APP_NAME} version ${VERSION} for ${{ matrix.goos }}_${{ matrix.arch }}"
          mkdir -p dist
          go build -v -o dist/${APP_NAME}_${{ matrix.goos }}_${{ matrix.arch }} -ldflags "-s -w -X main.Version=${VERSION}" .

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.goos }}_${{ matrix.arch }}_artifacts
          path: dist/

  upload:
    name: Upload Artifacts
    runs-on: ubuntu-24.04
    needs:
      - build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Upload Artifacts to Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ github.event.inputs.version || github.event.release.tag_name }}
        run: |
          find dist -type f -not -path "*/\.*" | while read file; do
            echo "Uploading $file to release $VERSION"
            gh release upload $VERSION "$file" --clobber
          done
