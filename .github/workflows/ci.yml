---
name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - README.md
  pull_request:
    branches:
      - main
    paths-ignore:
      - README.md

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4.2.2

      - name: Set up Go
        uses: actions/setup-go@v5.5.0
        with:
          go-version: '1.24'

      - name: Setup Node.js
        uses: actions/setup-node@v4.4.0
        with:
          node-version: 'lts/*'

      - name: Install GolangCI Lint
        run: go install github.com/golangci/golangci-lint/v2/cmd/golangci-lint@v2.1.5

      - name: Install Spectral
        run: npm install -g @stoplight/spectral-cli

      - name: Lint
        run: golangci-lint run

      - name: Lint OpenAPI Specification
        run: spectral lint --verbose openapi.yml

      - name: Generate and tidy
        run: |
          # Save the state before running commands
          echo "=== Before running commands ==="
          git status --short

          # Run the commands that might modify files
          echo "=== Running go mod tidy ==="
          go mod tidy

          echo "=== Running go generate ==="
          go generate ./...

      - name: Check for uncommitted changes
        run: |
          echo "=== Files changed by go mod tidy and go generate ==="
          git status --short

          echo "=== Detailed diff of changes ==="
          git diff

          if ! git diff-index --quiet HEAD --; then
            echo "Error: Uncommitted changes detected after go mod tidy and go generate"
            echo "Please commit these changes or update your PR"
            exit 1
          fi
          echo "Repository is clean - no uncommitted changes detected"

      - name: Build
        run: go build -v ./...

      - name: Unit Tests
        run: go test -v ./tests/unit -coverprofile=coverage.out

      - name: Integration Tests
        run: go test -v ./tests/integration/... -coverprofile=integration-coverage.out
