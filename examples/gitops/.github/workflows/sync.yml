name: Sync

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/sync.yml'
      - 'workflows/**'
  workflow_dispatch:

jobs:
  sync-workflows:
    runs-on: ubuntu-24.04
    name: Sync n8n Workflows to Github
    permissions:
      contents: write
      pull-requests: write
      issues: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: Set up Node.js
        uses: actions/setup-node@v4.4.0
        with:
          node-version: 'lts/*'

      - name: Install n8n CLI
        run: |
          curl -sSLf https://raw.github.com/edenreich/n8n-cli/main/install.sh | sh

      - name: Sync workflows to n8n instance
        env:
          N8N_API_KEY: ${{ secrets.N8N_API_KEY }}
          N8N_INSTANCE_URL: ${{ secrets.N8N_INSTANCE_URL }}
        run: |
          n8n workflows refresh --directory workflows/ --output yaml --all

      - name: Generate changes summary
        id: generate-summary
        run: |
          MODIFIED_FILES=$(git diff --name-status workflows/)
          UNTRACKED_FILES=$(git ls-files --others --exclude-standard -- workflows/)

          if [ -z "$MODIFIED_FILES" ] && [ -z "$UNTRACKED_FILES" ]; then
            echo "No changes detected in workflows directory"
            echo "PR_TITLE=No changes detected in workflows" >> $GITHUB_OUTPUT
            echo "PR_BODY=No changes were detected in the n8n workflows directory." >> $GITHUB_OUTPUT
          else
            touch changes.txt
            
            if [ -n "$MODIFIED_FILES" ]; then
              git diff --name-only workflows/ | xargs -I{} echo "Modified File: {}" >> changes.txt
              git diff workflows/ >> changes.txt
            fi
            
            if [ -n "$UNTRACKED_FILES" ]; then
              echo -e "\n--- UNTRACKED FILES ---\n" >> changes.txt
              echo "$UNTRACKED_FILES" | xargs -I{} echo "New File: {}" >> changes.txt
              echo "$UNTRACKED_FILES" | xargs -I{} echo -e "\nContents of new file {}:\n" >> changes.txt
              echo "$UNTRACKED_FILES" | xargs -I{} cat {} >> changes.txt
            fi
            
            JSON_PAYLOAD=$(jq -n --arg changes "$(cat changes.txt)" --arg prefix "Analyze these n8n workflow changes and generate: 1) A PR title using conventional commit format (feat/fix/chore/etc), and 2) A PR body with bulleted details of the changes. Format your response as JSON with title and body fields. For the body field, return a simple Markdown string with a ## Summary heading and bullet points for changes. Here are the changes: \n\n" '{
              model: "llama3-70b-8192",
              messages: [
                {
                  role: "system", 
                  content: "You are an expert at analyzing n8n workflow changes and generating PR content. For the title, use conventional commit format (feat/fix/chore/docs/etc) and keep it under 80 characters. For the body, provide a clear Markdown summary with a ## Summary heading and bullet points for each meaningful change."
                },
                {
                  role: "user",
                  content: ($prefix + $changes)
                }
              ],
              response_format: { type: "json_object" },
              temperature: 0.2,
              max_tokens: 1024
            }')
            
            RESPONSE=$(curl -s -X POST "https://api.groq.com/openai/v1/chat/completions" \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer ${{ secrets.GROQ_API_KEY }}" \
              -d "$JSON_PAYLOAD")
            
            if [ $? -eq 0 ] && [ -n "$RESPONSE" ]; then
              TITLE=$(echo "$RESPONSE" | jq -r '.choices[0].message.content' | jq -r '.title')
              BODY=$(echo "$RESPONSE" | jq -r '.choices[0].message.content' | jq -r '.body')
              
              if [[ "$BODY" != *"## Summary"* ]]; then
                BODY="## Summary\n\n$BODY"
              fi
              
              if [ -z "$TITLE" ] || [ "$TITLE" == "null" ]; then
                TITLE="chore: Update n8n workflows from cloud instance"
              fi
              
              if [ -z "$BODY" ] || [ "$BODY" == "null" ]; then
                BODY="## Summary\n\nThis PR updates the n8n workflows from the cloud instance."
              fi
            else
              TITLE="chore: Update n8n workflows from cloud instance"
              BODY="## Summary\n\nThis PR updates the n8n workflows from the cloud instance."
            fi
             
            echo -e "$BODY" > pr_body.md
            
            echo "PR_TITLE=$TITLE" >> $GITHUB_OUTPUT
            echo "PR_BODY_FILE=$(pwd)/pr_body.md" >> $GITHUB_OUTPUT
            echo "Generated PR title: $TITLE"
          fi

      - name: Generate branch name
        id: branch-name
        run: |
          echo "name=workflow-sync-$(date +%Y%m%d%H%M%S)" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v7
        with:
          commit-message: '${{ steps.generate-summary.outputs.PR_TITLE }}'
          branch: ${{ steps.branch-name.outputs.name }}
          delete-branch: true
          add-paths: |
            workflows/
          title: '${{ steps.generate-summary.outputs.PR_TITLE }}'
          body-path: ${{ steps.generate-summary.outputs.PR_BODY_FILE }}
          labels: |
            automated
            n8n
            changes

      - name: Check PR output
        if: ${{ steps.cpr.outputs.pull-request-number }}
        run: |
          echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
          echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"
