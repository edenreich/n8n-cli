{
  "name": "n8n CLI Development",
  "build": {
    "dockerfile": "Dockerfile"
  },
  "features": {
    "ghcr.io/devcontainers/features/docker-in-docker:2": {}
  },
  "customizations": {
    "vscode": {
      "extensions": [
        "golang.go",
        "ms-vscode.go",
        "task.vscode-task",
        "ms-azuretools.vscode-docker",
        "streetsidesoftware.code-spell-checker",
        "esbenp.prettier-vscode",
        "42crunch.vscode-openapi"
      ],
      "settings": {
        "files.insertFinalNewline": true,
        "prettier.singleQuote": true,
        "go.lintTool": "golangci-lint",
        "go.lintFlags": ["--fast"],
        "terminal.integrated.defaultProfile.linux": "zsh",
        "go.useLanguageServer": true,
        "go.toolsEnvVars": {
          "GO111MODULE": "on"
        },
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "[go]": {
          "editor.defaultFormatter": "golang.go"
        },
        "editor.renderWhitespace": "all",
        "chat.agent.enabled": true,
        "cSpell.enabled": true,
        "cSpell.files": ["**/*.md"],
        "git.enableCommitSigning": true,
        "dev.containers.copyGitConfig": true,
        "github.copilot.chat.codeGeneration.useInstructionFiles": true,
        "github.copilot.chat.commitMessageGeneration.instructions": [
          {
            "text": "Always use conventional commit message format."
          }
        ],
        "github.copilot.chat.pullRequestDescriptionGeneration.instructions": [
          {
            "text": "Always fill the pull request with the following information: \n ## Summary\n <summary of the pull request>\n"
          }
        ],
        "github.copilot.chat.testGeneration.instructions": [
          {
            "text": "Always use table-driven tests."
          }
        ],
        "mcp": {
          "servers": {
            "Context7": {
              "command": "docker",
              "args": [
                "run",
                "-i",
                "--rm",
                "node:lts",
                "npx",
                "-y",
                "@upstash/context7-mcp@latest"
              ]
            }
          }
        }
      }
    }
  },
  "workspaceFolder": "/workspaces/n8n-cli",
  "remoteEnv": {
    "GITHUB_TOKEN": "${localEnv:GITHUB_TOKEN}"
  }
}
