version: '3'

vars:
  VERSION:
    sh: git describe --tags --always --dirty | sed 's/^v//' || echo "dev"
  COMMIT:
    sh: git rev-parse --short HEAD || echo "none"
  BUILD_DATE:
    sh: date -u '+%Y-%m-%d_%H:%M:%S' || echo "unknown"
  LD_FLAGS: >-
    -X github.com/edenreich/n8n-cli/config.Version={{.VERSION}}
    -X github.com/edenreich/n8n-cli/config.BuildDate={{.BUILD_DATE}}
    -X github.com/edenreich/n8n-cli/config.Commit={{.COMMIT}}

tasks:
  oas-download:
    desc: 'Download the OpenAPI Specification for n8n'
    cmds:
      - curl -sSLf https://docs.n8n.io/api/v1/openapi.yml > openapi.yml

  oas-lint:
    desc: 'Lint OpenAPI spec'
    cmds:
      - spectral lint --verbose openapi.yml

  oas-generate:
    desc: Generate Go types from OpenAPI specification
    cmds:
      - go run github.com/oapi-codegen/oapi-codegen/v2/cmd/oapi-codegen@latest --package=n8n --generate types -o n8n/generated_types.go openapi.yml

  generate:
    desc: 'Generate interface and shim for a package with mocks'
    deps:
      - testing-deps
    cmds:
      - COUNTERFEITER_NO_GENERATE_WARNING=true go generate ./...

  cli:
    desc: 'Run the n8n CLI'
    cmds:
      - go run -ldflags="{{.LD_FLAGS}}" ./main.go {{.CLI_ARGS}}

  build:
    desc: 'Build the n8n CLI with version information'
    cmds:
      - go build -ldflags="{{.LD_FLAGS}}" -o ./bin/n8n .

  install:
    desc: 'Build and install the n8n CLI to $GOPATH/bin'
    cmds:
      - go build -ldflags="{{.LD_FLAGS}}" -o $(go env GOPATH)/bin/n8n .

  test-unit:
    desc: 'Run only unit tests'
    cmds:
      - go test -v ./tests/unit -coverprofile=coverage.out

  test-integration:
    desc: 'Run integration tests'
    cmds:
      - go test -v ./tests/integration/... -coverprofile=integration-coverage.out

  test:
    desc: 'Run all tests (unit and integration)'
    cmds:
      - task: test-unit
      - task: test-integration

  lint:
    desc: 'Run the linter'
    cmds:
      - golangci-lint run

  testing-deps:
    desc: 'Install dependencies for testing'
    cmds:
      - go install github.com/maxbrunsfeld/counterfeiter/v6@latest
