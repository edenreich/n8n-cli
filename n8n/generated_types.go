// Package n8n provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package n8n

import (
	"encoding/json"
	"fmt"
	"time"

	"github.com/oapi-codegen/runtime"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	ApiKeyAuthScopes = "ApiKeyAuth.Scopes"
)

// Defines values for ExecutionMode.
const (
	ExecutionModeCli        ExecutionMode = "cli"
	ExecutionModeError      ExecutionMode = "error"
	ExecutionModeIntegrated ExecutionMode = "integrated"
	ExecutionModeInternal   ExecutionMode = "internal"
	ExecutionModeManual     ExecutionMode = "manual"
	ExecutionModeRetry      ExecutionMode = "retry"
	ExecutionModeTrigger    ExecutionMode = "trigger"
	ExecutionModeWebhook    ExecutionMode = "webhook"
)

// Defines values for WorkflowSettingsSaveDataErrorExecution.
const (
	WorkflowSettingsSaveDataErrorExecutionAll  WorkflowSettingsSaveDataErrorExecution = "all"
	WorkflowSettingsSaveDataErrorExecutionNone WorkflowSettingsSaveDataErrorExecution = "none"
)

// Defines values for WorkflowSettingsSaveDataSuccessExecution.
const (
	WorkflowSettingsSaveDataSuccessExecutionAll  WorkflowSettingsSaveDataSuccessExecution = "all"
	WorkflowSettingsSaveDataSuccessExecutionNone WorkflowSettingsSaveDataSuccessExecution = "none"
)

// Defines values for PostAuditJSONBodyAdditionalOptionsCategories.
const (
	Credentials PostAuditJSONBodyAdditionalOptionsCategories = "credentials"
	Database    PostAuditJSONBodyAdditionalOptionsCategories = "database"
	Filesystem  PostAuditJSONBodyAdditionalOptionsCategories = "filesystem"
	Instance    PostAuditJSONBodyAdditionalOptionsCategories = "instance"
	Nodes       PostAuditJSONBodyAdditionalOptionsCategories = "nodes"
)

// Defines values for GetExecutionsParamsStatus.
const (
	GetExecutionsParamsStatusError   GetExecutionsParamsStatus = "error"
	GetExecutionsParamsStatusSuccess GetExecutionsParamsStatus = "success"
	GetExecutionsParamsStatusWaiting GetExecutionsParamsStatus = "waiting"
)

// Defines values for PostUsersJSONBodyRole.
const (
	PostUsersJSONBodyRoleGlobalAdmin  PostUsersJSONBodyRole = "global:admin"
	PostUsersJSONBodyRoleGlobalMember PostUsersJSONBodyRole = "global:member"
)

// Defines values for PatchUsersIdRoleJSONBodyNewRoleName.
const (
	PatchUsersIdRoleJSONBodyNewRoleNameGlobalAdmin  PatchUsersIdRoleJSONBodyNewRoleName = "global:admin"
	PatchUsersIdRoleJSONBodyNewRoleNameGlobalMember PatchUsersIdRoleJSONBodyNewRoleName = "global:member"
)

// Audit defines model for audit.
type Audit struct {
	CredentialsRiskReport *map[string]interface{} `json:"Credentials Risk Report,omitempty"`
	DatabaseRiskReport    *map[string]interface{} `json:"Database Risk Report,omitempty"`
	FilesystemRiskReport  *map[string]interface{} `json:"Filesystem Risk Report,omitempty"`
	InstanceRiskReport    *map[string]interface{} `json:"Instance Risk Report,omitempty"`
	NodesRiskReport       *map[string]interface{} `json:"Nodes Risk Report,omitempty"`
}

// CreateCredentialResponse defines model for create-credential-response.
type CreateCredentialResponse struct {
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	Id        *string    `json:"id,omitempty"`
	Name      string     `json:"name"`
	Type      string     `json:"type"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Credential defines model for credential.
type Credential struct {
	CreatedAt *time.Time              `json:"createdAt,omitempty"`
	Data      *map[string]interface{} `json:"data,omitempty"`
	Id        *string                 `json:"id,omitempty"`
	Name      string                  `json:"name"`
	Type      string                  `json:"type"`
	UpdatedAt *time.Time              `json:"updatedAt,omitempty"`
}

// Execution defines model for execution.
type Execution struct {
	CustomData     *map[string]interface{} `json:"customData,omitempty"`
	Data           *map[string]interface{} `json:"data,omitempty"`
	Finished       *bool                   `json:"finished,omitempty"`
	Id             *float32                `json:"id,omitempty"`
	Mode           *ExecutionMode          `json:"mode,omitempty"`
	RetryOf        *float32                `json:"retryOf"`
	RetrySuccessId *float32                `json:"retrySuccessId"`
	StartedAt      *time.Time              `json:"startedAt,omitempty"`
	StoppedAt      *time.Time              `json:"stoppedAt,omitempty"`
	WaitTill       *time.Time              `json:"waitTill"`
	WorkflowId     *float32                `json:"workflowId,omitempty"`
}

// ExecutionMode defines model for Execution.Mode.
type ExecutionMode string

// ExecutionList defines model for executionList.
type ExecutionList struct {
	Data *[]Execution `json:"data,omitempty"`

	// NextCursor Paginate through executions by setting the cursor parameter to a nextCursor attribute returned by a previous request. Default value fetches the first "page" of the collection.
	NextCursor *string `json:"nextCursor"`
}

// ImportResult defines model for importResult.
type ImportResult struct {
	Credentials *[]struct {
		Id   *string `json:"id,omitempty"`
		Name *string `json:"name,omitempty"`
		Type *string `json:"type,omitempty"`
	} `json:"credentials,omitempty"`
	Tags *struct {
		Mappings *[]struct {
			TagId      *string `json:"tagId,omitempty"`
			WorkflowId *string `json:"workflowId,omitempty"`
		} `json:"mappings,omitempty"`
		Tags *[]struct {
			Id   *string `json:"id,omitempty"`
			Name *string `json:"name,omitempty"`
		} `json:"tags,omitempty"`
	} `json:"tags,omitempty"`
	Variables *struct {
		Added   *[]string `json:"added,omitempty"`
		Changed *[]string `json:"changed,omitempty"`
	} `json:"variables,omitempty"`
	Workflows *[]struct {
		Id   *string `json:"id,omitempty"`
		Name *string `json:"name,omitempty"`
	} `json:"workflows,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}

// Node defines model for node.
type Node struct {
	AlwaysOutputData *bool `json:"alwaysOutputData,omitempty"`

	// ContinueOnFail use onError instead
	// Deprecated:
	ContinueOnFail   *bool                   `json:"continueOnFail,omitempty"`
	CreatedAt        *time.Time              `json:"createdAt,omitempty"`
	Credentials      *map[string]interface{} `json:"credentials,omitempty"`
	Disabled         *bool                   `json:"disabled,omitempty"`
	ExecuteOnce      *bool                   `json:"executeOnce,omitempty"`
	Id               *string                 `json:"id,omitempty"`
	MaxTries         *float32                `json:"maxTries,omitempty"`
	Name             *string                 `json:"name,omitempty"`
	Notes            *string                 `json:"notes,omitempty"`
	NotesInFlow      *bool                   `json:"notesInFlow,omitempty"`
	OnError          *string                 `json:"onError,omitempty"`
	Parameters       *map[string]interface{} `json:"parameters,omitempty"`
	Position         *[]float32              `json:"position,omitempty"`
	RetryOnFail      *bool                   `json:"retryOnFail,omitempty"`
	Type             *string                 `json:"type,omitempty"`
	TypeVersion      *float32                `json:"typeVersion,omitempty"`
	UpdatedAt        *time.Time              `json:"updatedAt,omitempty"`
	WaitBetweenTries *float32                `json:"waitBetweenTries,omitempty"`
	WebhookId        *string                 `json:"webhookId,omitempty"`
}

// Project defines model for project.
type Project struct {
	Id   *string `json:"id,omitempty"`
	Name string  `json:"name"`
	Type *string `json:"type,omitempty"`
}

// ProjectList defines model for projectList.
type ProjectList struct {
	Data *[]Project `json:"data,omitempty"`

	// NextCursor Paginate through projects by setting the cursor parameter to a nextCursor attribute returned by a previous request. Default value fetches the first "page" of the collection.
	NextCursor *string `json:"nextCursor"`
}

// Pull defines model for pull.
type Pull struct {
	Force     *bool                   `json:"force,omitempty"`
	Variables *map[string]interface{} `json:"variables,omitempty"`
}

// Tag defines model for tag.
type Tag struct {
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	Id        *string    `json:"id,omitempty"`
	Name      string     `json:"name"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// TagIds defines model for tagIds.
type TagIds = []struct {
	Id string `json:"id"`
}

// TagList defines model for tagList.
type TagList struct {
	Data *[]Tag `json:"data,omitempty"`

	// NextCursor Paginate through tags by setting the cursor parameter to a nextCursor attribute returned by a previous request. Default value fetches the first "page" of the collection.
	NextCursor *string `json:"nextCursor"`
}

// User defines model for user.
type User struct {
	// CreatedAt Time the user was created.
	CreatedAt *time.Time          `json:"createdAt,omitempty"`
	Email     openapi_types.Email `json:"email"`

	// FirstName User's first name
	FirstName *string `json:"firstName,omitempty"`
	Id        *string `json:"id,omitempty"`

	// IsPending Whether the user finished setting up their account in response to the invitation (true) or not (false).
	IsPending *bool `json:"isPending,omitempty"`

	// LastName User's last name
	LastName *string `json:"lastName,omitempty"`
	Role     *string `json:"role,omitempty"`

	// UpdatedAt Last time the user was updated.
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// UserList defines model for userList.
type UserList struct {
	Data *[]User `json:"data,omitempty"`

	// NextCursor Paginate through users by setting the cursor parameter to a nextCursor attribute returned by a previous request. Default value fetches the first "page" of the collection.
	NextCursor *string `json:"nextCursor"`
}

// Variable defines model for variable.
type Variable struct {
	Id    *string `json:"id,omitempty"`
	Key   string  `json:"key"`
	Type  *string `json:"type,omitempty"`
	Value string  `json:"value"`
}

// VariableList defines model for variableList.
type VariableList struct {
	Data *[]Variable `json:"data,omitempty"`

	// NextCursor Paginate through variables by setting the cursor parameter to a nextCursor attribute returned by a previous request. Default value fetches the first "page" of the collection.
	NextCursor *string `json:"nextCursor"`
}

// Workflow defines model for workflow.
type Workflow struct {
	Active      *bool                  `json:"active,omitempty"`
	Connections map[string]interface{} `json:"connections"`
	CreatedAt   *time.Time             `json:"createdAt,omitempty"`
	Id          *string                `json:"id,omitempty"`
	Name        string                 `json:"name"`
	Nodes       []Node                 `json:"nodes"`
	Settings    WorkflowSettings       `json:"settings"`
	StaticData  *Workflow_StaticData   `json:"staticData,omitempty"`
	Tags        *[]Tag                 `json:"tags,omitempty"`
	UpdatedAt   *time.Time             `json:"updatedAt,omitempty"`
}

// WorkflowStaticData0 defines model for .
type WorkflowStaticData0 = string

// WorkflowStaticData1 defines model for .
type WorkflowStaticData1 = map[string]interface{}

// Workflow_StaticData defines model for Workflow.StaticData.
type Workflow_StaticData struct {
	union json.RawMessage
}

// WorkflowList defines model for workflowList.
type WorkflowList struct {
	Data *[]Workflow `json:"data,omitempty"`

	// NextCursor Paginate through workflows by setting the cursor parameter to a nextCursor attribute returned by a previous request. Default value fetches the first "page" of the collection.
	NextCursor *string `json:"nextCursor"`
}

// WorkflowSettings defines model for workflowSettings.
type WorkflowSettings struct {
	// ErrorWorkflow The ID of the workflow that contains the error trigger node.
	ErrorWorkflow            *string                                   `json:"errorWorkflow,omitempty"`
	ExecutionOrder           *string                                   `json:"executionOrder,omitempty"`
	ExecutionTimeout         *float32                                  `json:"executionTimeout,omitempty"`
	SaveDataErrorExecution   *WorkflowSettingsSaveDataErrorExecution   `json:"saveDataErrorExecution,omitempty"`
	SaveDataSuccessExecution *WorkflowSettingsSaveDataSuccessExecution `json:"saveDataSuccessExecution,omitempty"`
	SaveExecutionProgress    *bool                                     `json:"saveExecutionProgress,omitempty"`
	SaveManualExecutions     *bool                                     `json:"saveManualExecutions,omitempty"`
	Timezone                 *string                                   `json:"timezone,omitempty"`
}

// WorkflowSettingsSaveDataErrorExecution defines model for WorkflowSettings.SaveDataErrorExecution.
type WorkflowSettingsSaveDataErrorExecution string

// WorkflowSettingsSaveDataSuccessExecution defines model for WorkflowSettings.SaveDataSuccessExecution.
type WorkflowSettingsSaveDataSuccessExecution string

// WorkflowTags defines model for workflowTags.
type WorkflowTags = []Tag

// CredentialId defines model for credentialId.
type CredentialId = string

// Cursor defines model for cursor.
type Cursor = string

// ExecutionId defines model for executionId.
type ExecutionId = float32

// IncludeData defines model for includeData.
type IncludeData = bool

// IncludeRole defines model for includeRole.
type IncludeRole = bool

// Limit defines model for limit.
type Limit = float32

// ProjectId defines model for projectId.
type ProjectId = string

// TagId defines model for tagId.
type TagId = string

// UserIdentifier defines model for userIdentifier.
type UserIdentifier = string

// VariableId defines model for variableId.
type VariableId = string

// WorkflowId defines model for workflowId.
type WorkflowId = string

// PostAuditJSONBody defines parameters for PostAudit.
type PostAuditJSONBody struct {
	AdditionalOptions *struct {
		Categories *[]PostAuditJSONBodyAdditionalOptionsCategories `json:"categories,omitempty"`

		// DaysAbandonedWorkflow Days for a workflow to be considered abandoned if not executed
		DaysAbandonedWorkflow *int `json:"daysAbandonedWorkflow,omitempty"`
	} `json:"additionalOptions,omitempty"`
}

// PostAuditJSONBodyAdditionalOptionsCategories defines parameters for PostAudit.
type PostAuditJSONBodyAdditionalOptionsCategories string

// PutCredentialsIdTransferJSONBody defines parameters for PutCredentialsIdTransfer.
type PutCredentialsIdTransferJSONBody struct {
	// DestinationProjectId The ID of the project to transfer the credential to.
	DestinationProjectId string `json:"destinationProjectId"`
}

// GetExecutionsParams defines parameters for GetExecutions.
type GetExecutionsParams struct {
	// IncludeData Whether or not to include the execution's detailed data.
	IncludeData *IncludeData `form:"includeData,omitempty" json:"includeData,omitempty"`

	// Status Status to filter the executions by.
	Status *GetExecutionsParamsStatus `form:"status,omitempty" json:"status,omitempty"`

	// WorkflowId Workflow to filter the executions by.
	WorkflowId *string `form:"workflowId,omitempty" json:"workflowId,omitempty"`
	ProjectId  *string `form:"projectId,omitempty" json:"projectId,omitempty"`

	// Limit The maximum number of items to return.
	Limit *Limit `form:"limit,omitempty" json:"limit,omitempty"`

	// Cursor Paginate by setting the cursor parameter to the nextCursor attribute returned by the previous request's response. Default value fetches the first "page" of the collection. See pagination for more detail.
	Cursor *Cursor `form:"cursor,omitempty" json:"cursor,omitempty"`
}

// GetExecutionsParamsStatus defines parameters for GetExecutions.
type GetExecutionsParamsStatus string

// GetExecutionsIdParams defines parameters for GetExecutionsId.
type GetExecutionsIdParams struct {
	// IncludeData Whether or not to include the execution's detailed data.
	IncludeData *IncludeData `form:"includeData,omitempty" json:"includeData,omitempty"`
}

// GetProjectsParams defines parameters for GetProjects.
type GetProjectsParams struct {
	// Limit The maximum number of items to return.
	Limit *Limit `form:"limit,omitempty" json:"limit,omitempty"`

	// Cursor Paginate by setting the cursor parameter to the nextCursor attribute returned by the previous request's response. Default value fetches the first "page" of the collection. See pagination for more detail.
	Cursor *Cursor `form:"cursor,omitempty" json:"cursor,omitempty"`
}

// GetTagsParams defines parameters for GetTags.
type GetTagsParams struct {
	// Limit The maximum number of items to return.
	Limit *Limit `form:"limit,omitempty" json:"limit,omitempty"`

	// Cursor Paginate by setting the cursor parameter to the nextCursor attribute returned by the previous request's response. Default value fetches the first "page" of the collection. See pagination for more detail.
	Cursor *Cursor `form:"cursor,omitempty" json:"cursor,omitempty"`
}

// GetUsersParams defines parameters for GetUsers.
type GetUsersParams struct {
	// Limit The maximum number of items to return.
	Limit *Limit `form:"limit,omitempty" json:"limit,omitempty"`

	// Cursor Paginate by setting the cursor parameter to the nextCursor attribute returned by the previous request's response. Default value fetches the first "page" of the collection. See pagination for more detail.
	Cursor *Cursor `form:"cursor,omitempty" json:"cursor,omitempty"`

	// IncludeRole Whether to include the user's role or not.
	IncludeRole *IncludeRole `form:"includeRole,omitempty" json:"includeRole,omitempty"`
	ProjectId   *string      `form:"projectId,omitempty" json:"projectId,omitempty"`
}

// PostUsersJSONBody defines parameters for PostUsers.
type PostUsersJSONBody = []struct {
	Email openapi_types.Email    `json:"email"`
	Role  *PostUsersJSONBodyRole `json:"role,omitempty"`
}

// PostUsersJSONBodyRole defines parameters for PostUsers.
type PostUsersJSONBodyRole string

// GetUsersIdParams defines parameters for GetUsersId.
type GetUsersIdParams struct {
	// IncludeRole Whether to include the user's role or not.
	IncludeRole *IncludeRole `form:"includeRole,omitempty" json:"includeRole,omitempty"`
}

// PatchUsersIdRoleJSONBody defines parameters for PatchUsersIdRole.
type PatchUsersIdRoleJSONBody struct {
	NewRoleName PatchUsersIdRoleJSONBodyNewRoleName `json:"newRoleName"`
}

// PatchUsersIdRoleJSONBodyNewRoleName defines parameters for PatchUsersIdRole.
type PatchUsersIdRoleJSONBodyNewRoleName string

// GetVariablesParams defines parameters for GetVariables.
type GetVariablesParams struct {
	// Limit The maximum number of items to return.
	Limit *Limit `form:"limit,omitempty" json:"limit,omitempty"`

	// Cursor Paginate by setting the cursor parameter to the nextCursor attribute returned by the previous request's response. Default value fetches the first "page" of the collection. See pagination for more detail.
	Cursor *Cursor `form:"cursor,omitempty" json:"cursor,omitempty"`
}

// GetWorkflowsParams defines parameters for GetWorkflows.
type GetWorkflowsParams struct {
	Active    *bool   `form:"active,omitempty" json:"active,omitempty"`
	Tags      *string `form:"tags,omitempty" json:"tags,omitempty"`
	Name      *string `form:"name,omitempty" json:"name,omitempty"`
	ProjectId *string `form:"projectId,omitempty" json:"projectId,omitempty"`

	// ExcludePinnedData Set this to avoid retrieving pinned data
	ExcludePinnedData *bool `form:"excludePinnedData,omitempty" json:"excludePinnedData,omitempty"`

	// Limit The maximum number of items to return.
	Limit *Limit `form:"limit,omitempty" json:"limit,omitempty"`

	// Cursor Paginate by setting the cursor parameter to the nextCursor attribute returned by the previous request's response. Default value fetches the first "page" of the collection. See pagination for more detail.
	Cursor *Cursor `form:"cursor,omitempty" json:"cursor,omitempty"`
}

// GetWorkflowsIdParams defines parameters for GetWorkflowsId.
type GetWorkflowsIdParams struct {
	// ExcludePinnedData Set this to avoid retrieving pinned data
	ExcludePinnedData *bool `form:"excludePinnedData,omitempty" json:"excludePinnedData,omitempty"`
}

// PutWorkflowsIdTransferJSONBody defines parameters for PutWorkflowsIdTransfer.
type PutWorkflowsIdTransferJSONBody struct {
	// DestinationProjectId The ID of the project to transfer the workflow to.
	DestinationProjectId string `json:"destinationProjectId"`
}

// PostAuditJSONRequestBody defines body for PostAudit for application/json ContentType.
type PostAuditJSONRequestBody PostAuditJSONBody

// PostCredentialsJSONRequestBody defines body for PostCredentials for application/json ContentType.
type PostCredentialsJSONRequestBody = Credential

// PutCredentialsIdTransferJSONRequestBody defines body for PutCredentialsIdTransfer for application/json ContentType.
type PutCredentialsIdTransferJSONRequestBody PutCredentialsIdTransferJSONBody

// PostProjectsJSONRequestBody defines body for PostProjects for application/json ContentType.
type PostProjectsJSONRequestBody = Project

// PutProjectsProjectIdJSONRequestBody defines body for PutProjectsProjectId for application/json ContentType.
type PutProjectsProjectIdJSONRequestBody = Project

// PostSourceControlPullJSONRequestBody defines body for PostSourceControlPull for application/json ContentType.
type PostSourceControlPullJSONRequestBody = Pull

// PostTagsJSONRequestBody defines body for PostTags for application/json ContentType.
type PostTagsJSONRequestBody = Tag

// PutTagsIdJSONRequestBody defines body for PutTagsId for application/json ContentType.
type PutTagsIdJSONRequestBody = Tag

// PostUsersJSONRequestBody defines body for PostUsers for application/json ContentType.
type PostUsersJSONRequestBody = PostUsersJSONBody

// PatchUsersIdRoleJSONRequestBody defines body for PatchUsersIdRole for application/json ContentType.
type PatchUsersIdRoleJSONRequestBody PatchUsersIdRoleJSONBody

// PostVariablesJSONRequestBody defines body for PostVariables for application/json ContentType.
type PostVariablesJSONRequestBody = Variable

// PostWorkflowsJSONRequestBody defines body for PostWorkflows for application/json ContentType.
type PostWorkflowsJSONRequestBody = Workflow

// PutWorkflowsIdJSONRequestBody defines body for PutWorkflowsId for application/json ContentType.
type PutWorkflowsIdJSONRequestBody = Workflow

// PutWorkflowsIdTagsJSONRequestBody defines body for PutWorkflowsIdTags for application/json ContentType.
type PutWorkflowsIdTagsJSONRequestBody = TagIds

// PutWorkflowsIdTransferJSONRequestBody defines body for PutWorkflowsIdTransfer for application/json ContentType.
type PutWorkflowsIdTransferJSONRequestBody PutWorkflowsIdTransferJSONBody

// Getter for additional properties for ImportResult. Returns the specified
// element and whether it was found
func (a ImportResult) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ImportResult
func (a *ImportResult) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ImportResult to handle AdditionalProperties
func (a *ImportResult) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if raw, found := object["credentials"]; found {
		err = json.Unmarshal(raw, &a.Credentials)
		if err != nil {
			return fmt.Errorf("error reading 'credentials': %w", err)
		}
		delete(object, "credentials")
	}

	if raw, found := object["tags"]; found {
		err = json.Unmarshal(raw, &a.Tags)
		if err != nil {
			return fmt.Errorf("error reading 'tags': %w", err)
		}
		delete(object, "tags")
	}

	if raw, found := object["variables"]; found {
		err = json.Unmarshal(raw, &a.Variables)
		if err != nil {
			return fmt.Errorf("error reading 'variables': %w", err)
		}
		delete(object, "variables")
	}

	if raw, found := object["workflows"]; found {
		err = json.Unmarshal(raw, &a.Workflows)
		if err != nil {
			return fmt.Errorf("error reading 'workflows': %w", err)
		}
		delete(object, "workflows")
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ImportResult to handle AdditionalProperties
func (a ImportResult) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	if a.Credentials != nil {
		object["credentials"], err = json.Marshal(a.Credentials)
		if err != nil {
			return nil, fmt.Errorf("error marshaling 'credentials': %w", err)
		}
	}

	if a.Tags != nil {
		object["tags"], err = json.Marshal(a.Tags)
		if err != nil {
			return nil, fmt.Errorf("error marshaling 'tags': %w", err)
		}
	}

	if a.Variables != nil {
		object["variables"], err = json.Marshal(a.Variables)
		if err != nil {
			return nil, fmt.Errorf("error marshaling 'variables': %w", err)
		}
	}

	if a.Workflows != nil {
		object["workflows"], err = json.Marshal(a.Workflows)
		if err != nil {
			return nil, fmt.Errorf("error marshaling 'workflows': %w", err)
		}
	}

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// AsWorkflowStaticData0 returns the union data inside the Workflow_StaticData as a WorkflowStaticData0
func (t Workflow_StaticData) AsWorkflowStaticData0() (WorkflowStaticData0, error) {
	var body WorkflowStaticData0
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromWorkflowStaticData0 overwrites any union data inside the Workflow_StaticData as the provided WorkflowStaticData0
func (t *Workflow_StaticData) FromWorkflowStaticData0(v WorkflowStaticData0) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeWorkflowStaticData0 performs a merge with any union data inside the Workflow_StaticData, using the provided WorkflowStaticData0
func (t *Workflow_StaticData) MergeWorkflowStaticData0(v WorkflowStaticData0) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsWorkflowStaticData1 returns the union data inside the Workflow_StaticData as a WorkflowStaticData1
func (t Workflow_StaticData) AsWorkflowStaticData1() (WorkflowStaticData1, error) {
	var body WorkflowStaticData1
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromWorkflowStaticData1 overwrites any union data inside the Workflow_StaticData as the provided WorkflowStaticData1
func (t *Workflow_StaticData) FromWorkflowStaticData1(v WorkflowStaticData1) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeWorkflowStaticData1 performs a merge with any union data inside the Workflow_StaticData, using the provided WorkflowStaticData1
func (t *Workflow_StaticData) MergeWorkflowStaticData1(v WorkflowStaticData1) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t Workflow_StaticData) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *Workflow_StaticData) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}
